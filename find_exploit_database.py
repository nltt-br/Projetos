# -*- coding:utf-8 -*-
import requests
from time import sleep
from bs4 import BeautifulSoup as bs

class ConsumerExploitDatabase:

    def get_info_url(self):

        url = "https://www.exploit-db.com/exploits/48073"
        headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'}
        return url, headers

    def m_consumer_db(self):

        url, headers = self.get_info_url()
        count = 0
        count_not = 0

        while True:

            try:
                while(count < 10):
                    url_mod = url.format(str(count))
                    get_browser = requests.get(url_mod, headers=headers)
                    if(get_browser.status_code == 200):
                        #cria um objeto da classe bs4 fazendo parser para html e procurando pelo título do exploit
                        soup = bs(get_browser.text, 'html.parser')
                        name_exploit = soup.find(class_='card-title text-secondary text-center')
                        name_exploit_mod = name_exploit.text
                        name_exploit_mod_blank_space = name_exploit_mod.replace(' ', '')
                        string_status_sucess = "{}Com a seguinte url --> {} está disponível."
                        string_status_sucess_mod = string_status_sucess.format(name_exploit_mod_blank_space, url_mod)

                        print(string_status_sucess_mod)
                        count_not += 1
                    else:
                        pass

                    count += 1

            except Exception as e:
                pass

            if(count_not > 9):



            """
            if(count == 9 and get_browser.status_code == 200):
                num_int = 8

                url_mod = url.replace(7, str(num_int))

                while(count < 10):
                    url_mod_novo = url_mod.format(str(count))
                    get_browser = requests.get(url_mod, headers=headers)
                    if(get_browser.status_code == 200):
                        #cria um objeto da classe bs4 fazendo parser para html e procurando pelo título do exploit
                        soup = bs(get_browser.text, 'html.parser')
                        name_exploit = soup.find(class_='card-title text-secondary text-center')
                        name_exploit_mod = name_exploit.text
                        name_exploit_mod_blank_space = name_exploit_mod.replace(' ', '')
                        string_status_sucess = "{}Com a seguinte url --> {} está disponível."
                        string_status_sucess_mod = string_status_sucess.format(name_exploit_mod_blank_space, url_mod)

                        print(string_status_sucess_mod)
                    else:
                        pass

                    count += 1
            """


if __name__ == '__main__':
    consumer = ConsumerExploitDatabase()
    consumer.m_consumer_db()
